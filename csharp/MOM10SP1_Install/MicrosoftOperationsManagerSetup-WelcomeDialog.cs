//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.0.3705.288
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// ' For information on how interfaces are used in classes derived from Window,
// '   please see http://mauiweb.
namespace MOM10SP1_Install
{
    using System;
    using System.ComponentModel;
    using Maui.OS.WinControls;
    using Maui.OS;
    
    
    [EditorBrowsable(EditorBrowsableState.Never)]
    public interface IMicrosoftOperationsManagerSetupWelcomeDialogControls
    {
        Button NextButton  {get;}
        Button CancelButton  {get;}
        StaticControl WelcometoMicrosoftOperationsManager2000SetupStaticControl  {get;}
        StaticControl SetupwillinstalloneormorecomponentsforMicrosoftOperationsManager2000onthiscomputerTocontinueSetupcloStaticControl  {get;}
    }
    
    /// -----------------------------------------------------------------------------
    /// Project		:  Maui
    // Class		: 
    ///  Copyright (C) 2002, oration
    /// -----------------------------------------------------------------------------
    ///  <summary>
    ///  TODO: Add dialog functionality description here.
    ///  </summary>
    ///  <remarks></remarks>
    ///  <history>[deangj] 4/7/2003 Created
    ///  </history>
    /// -----------------------------------------------------------------------------
    /// 
    public class MicrosoftOperationsManagerSetupWelcomeDialog : Dialog, IMicrosoftOperationsManagerSetupWelcomeDialogControls
    {
        protected Button m_CachedNextButton;
        protected Button m_CachedCancelButton;
        protected StaticControl m_CachedWelcometoMicrosoftOperationsManager2000SetupStaticControl;
        protected StaticControl m_CachedSetupwillinstalloneormorecomponentsforMicrosoftOperationsManager2000onthiscomputerTocontinueSetupcloStaticControl;
        
        /// -----------------------------------------------------------------------------
        ///  <summary>
        ///  TODO: Add a description for your constructor.
        ///  </summary>
        ///  <remarks></remarks>
        ///  <history>[Dialog Maker Tool] 4/7/2003 - Created
        ///  </history>
        /// -----------------------------------------------------------------------------
        public MicrosoftOperationsManagerSetupWelcomeDialog(App app) : 
                base(app, Init(app))
        {
            // TODO: Add Constructor logic here. 
        }
        
        /// -----------------------------------------------------------------------------
        ///  <summary>
        ///  Exposes access to the raw controls for this dialog
        ///  </summary>
        ///  <value>An interface that groups all of the dialog's control properties together</value>
        ///  <remarks></remarks>
        ///  <history>[Dialog Class Maker Tool] 4/7/2003 Created
        ///  </history>
        /// -----------------------------------------------------------------------------
        public virtual IMicrosoftOperationsManagerSetupWelcomeDialogControls Controls
        {
            get
            {
                return this;
            }
        }
        
        /// -----------------------------------------------------------------------------
        ///  <summary>
        ///  Exposes access to the NextButton control
        ///  </summary>
        ///  <value></value>
        ///  <remarks></remarks>
        ///  <history>[Dialog Class Maker Tool] 4/7/2003 - Created
        ///  </history>
        /// -----------------------------------------------------------------------------
        Button IMicrosoftOperationsManagerSetupWelcomeDialogControls.NextButton
        {
            get
            {
                if ((m_CachedNextButton == null))
                {
                    m_CachedNextButton = new Button(this, ControlIDs.NextButton);
                }
                return m_CachedNextButton;
            }
        }
        
        /// -----------------------------------------------------------------------------
        ///  <summary>
        ///  Exposes access to the CancelButton control
        ///  </summary>
        ///  <value></value>
        ///  <remarks></remarks>
        ///  <history>[Dialog Class Maker Tool] 4/7/2003 - Created
        ///  </history>
        /// -----------------------------------------------------------------------------
        Button IMicrosoftOperationsManagerSetupWelcomeDialogControls.CancelButton
        {
            get
            {
                if ((m_CachedCancelButton == null))
                {
                    m_CachedCancelButton = new Button(this, ControlIDs.CancelButton);
                }
                return m_CachedCancelButton;
            }
        }
        
        /// -----------------------------------------------------------------------------
        ///  <summary>
        ///  Exposes access to the WelcometoMicrosoftOperationsManager2000SetupStaticControl control
        ///  </summary>
        ///  <value></value>
        ///  <remarks></remarks>
        ///  <history>[Dialog Class Maker Tool] 4/7/2003 - Created
        ///  </history>
        /// -----------------------------------------------------------------------------
        StaticControl IMicrosoftOperationsManagerSetupWelcomeDialogControls.WelcometoMicrosoftOperationsManager2000SetupStaticControl
        {
            get
            {
                if ((m_CachedWelcometoMicrosoftOperationsManager2000SetupStaticControl == null))
                {
                    m_CachedWelcometoMicrosoftOperationsManager2000SetupStaticControl = new StaticControl(this, ControlIDs.WelcometoMicrosoftOperationsManager2000SetupStaticControl);
                }
                return m_CachedWelcometoMicrosoftOperationsManager2000SetupStaticControl;
            }
        }
        
        /// -----------------------------------------------------------------------------
        ///  <summary>
        ///  Exposes access to the SetupwillinstalloneormorecomponentsforMicrosoftOperationsManager2000onthiscomputerTocontinueSetupcloStaticControl control
        ///  </summary>
        ///  <value></value>
        ///  <remarks></remarks>
        ///  <history>[Dialog Class Maker Tool] 4/7/2003 - Created
        ///  </history>
        /// -----------------------------------------------------------------------------
        StaticControl IMicrosoftOperationsManagerSetupWelcomeDialogControls.SetupwillinstalloneormorecomponentsforMicrosoftOperationsManager2000onthiscomputerTocontinueSetupcloStaticControl
        {
            get
            {
                if ((m_CachedSetupwillinstalloneormorecomponentsforMicrosoftOperationsManager2000onthiscomputerTocontinueSetupcloStaticControl == null))
                {
                    m_CachedSetupwillinstalloneormorecomponentsforMicrosoftOperationsManager2000onthiscomputerTocontinueSetupcloStaticControl = new StaticControl(this, ControlIDs.SetupwillinstalloneormorecomponentsforMicrosoftOperationsManager2000onthiscomputerTocontinueSetupcloStaticControl);
                }
                return m_CachedSetupwillinstalloneormorecomponentsforMicrosoftOperationsManager2000onthiscomputerTocontinueSetupcloStaticControl;
            }
        }
        
        /// -----------------------------------------------------------------------------
        ///  <summary>
        ///  This function will attempt to find a showing instance of the dialog.
        ///  </summary>
        ///  <returns>The dialog's hWnd</returns>
        ///  <remarks></remarks>)
        ///  <history>[Dialog Class Maker Tool] 4/7/2003 Created
        ///  </history>
        /// -----------------------------------------------------------------------------
        private static int Init(App app)
        {
            // First check if the dialog is already up.
            Window tempWindow = new Window(Strings.DialogTitle, "GLBSWizard", true, 0, app.Process.Id);
            if ((tempWindow != null))
            {
                return tempWindow.Extended.HWnd;
            }
            // Dialog not found.  Need to invoke the dialog.
            // TODO: Add code to bring up dthe dialog
            // 
            // TODO: Remove next line.  Your code should return the handle of the dialog.
            return 0;
        }
        
        /// -----------------------------------------------------------------------------
        ///  <summary>
        ///  Routine to click on button Next
        ///  </summary>
        ///  <remarks></remarks>
        ///  <history>[Dialog Class Maker Tool] 4/7/2003 Created
        ///  </history>
        /// -----------------------------------------------------------------------------
        public virtual void ClickNext()
        {
            Controls.NextButton.Click();
        }
        
        /// -----------------------------------------------------------------------------
        ///  <summary>
        ///  Routine to click on button Cancel
        ///  </summary>
        ///  <remarks></remarks>
        ///  <history>[Dialog Class Maker Tool] 4/7/2003 Created
        ///  </history>
        /// -----------------------------------------------------------------------------
        public virtual void ClickCancel()
        {
            Controls.CancelButton.Click();
        }
        
        public class Strings
        {
            public const string DialogTitle = "Microsoft Operations Manager Setup - Welcome";
            public const string Next = "&Next >";
            public const string Cancel = "Cancel";
            public const string WelcometoMicrosoftOperationsManager2000Setup = "Welcome to Microsoft Operations Manager 2000 Setup";
            public const string SetupwillinstalloneormorecomponentsforMicrosoftOperationsManager2000onthiscomputerTocontinueSetupclo = "Setup will install one or more components for Microsoft Operations Manager 2000 o" +
                "n this computer.  \r\n\r\nTo continue Setup, close all other open programs and then " +
                "click Next.";
        }
        
        public class ControlIDs
        {
            public const int NextButton = 3;
            public const int CancelButton = 4;
            public const int WelcometoMicrosoftOperationsManager2000SetupStaticControl = 6;
            public const int SetupwillinstalloneormorecomponentsforMicrosoftOperationsManager2000onthiscomputerTocontinueSetupcloStaticControl = 7;
        }
    }
}
