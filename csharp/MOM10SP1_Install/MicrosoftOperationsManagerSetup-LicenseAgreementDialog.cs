//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.0.3705.288
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// ' For information on how interfaces are used in classes derived from Window,
// '   please see http://mauiweb.
namespace MOM10SP1_Install
{
    using System;
    using System.ComponentModel;
    using Maui.OS.WinControls;
    using Maui.OS;
    
    
    [EditorBrowsable(EditorBrowsableState.Never)]
    public interface IMicrosoftOperationsManagerSetupLicenseAgreementDialogControls
    {
        Button NextButton  {get;}
        Button CancelButton  {get;}
        TextBox NameASTestOperationsLabOrganizationMSProductIDQVG72JKDK4FR3Q8JKXGCFDG7MTextBox  {get;}
        Button BackButton  {get;}
        StaticControl PleasewritedownyourProductIDnumberIfyouneedtocallMicrosoftTechnicalSupportyouwillbeaskedforthisnumbeStaticControl  {get;}
        StaticControl NameASTestOperationsLabOrganizationMSProductIDQVG72JKDK4FR3Q8JKXGCFDG7MStaticControl  {get;}
        RadioButton IacceptthetermsinthelicenseagreementRadioButton  {get;}
        RadioButton IdonotacceptthetermsinthelicenseagreementRadioButton  {get;}
        StaticControl MicrosoftOperationsManager2000LicenseandSupportInformationStaticControl  {get;}
    }
    
    /// -----------------------------------------------------------------------------
    /// Project		:  Maui
    // Class		: 
    ///  Copyright (C) 2002, oration
    /// -----------------------------------------------------------------------------
    ///  <summary>
    ///  TODO: Add dialog functionality description here.
    ///  </summary>
    ///  <remarks></remarks>
    ///  <history>[deangj] 4/11/2003 Created
    ///  </history>
    /// -----------------------------------------------------------------------------
    /// 
    public class MicrosoftOperationsManagerSetupLicenseAgreementDialog : Dialog, IMicrosoftOperationsManagerSetupLicenseAgreementDialogControls
    {
        protected Button m_CachedNextButton;
        protected Button m_CachedCancelButton;
        protected TextBox m_CachedNameASTestOperationsLabOrganizationMSProductIDQVG72JKDK4FR3Q8JKXGCFDG7MTextBox;
        protected Button m_CachedBackButton;
        protected StaticControl m_CachedPleasewritedownyourProductIDnumberIfyouneedtocallMicrosoftTechnicalSupportyouwillbeaskedforthisnumbeStaticControl;
        protected StaticControl m_CachedNameASTestOperationsLabOrganizationMSProductIDQVG72JKDK4FR3Q8JKXGCFDG7MStaticControl;
        protected RadioButton m_CachedIacceptthetermsinthelicenseagreementRadioButton;
        protected RadioButton m_CachedIdonotacceptthetermsinthelicenseagreementRadioButton;
        protected StaticControl m_CachedMicrosoftOperationsManager2000LicenseandSupportInformationStaticControl;
        
        /// -----------------------------------------------------------------------------
        ///  <summary>
        ///  TODO: Add a description for your constructor.
        ///  </summary>
        ///  <remarks></remarks>
        ///  <history>[Dialog Maker Tool] 4/11/2003 - Created
        ///  </history>
        /// -----------------------------------------------------------------------------
        public MicrosoftOperationsManagerSetupLicenseAgreementDialog(App app) : 
                base(app, Init(app))
        {
            // TODO: Add Constructor logic here. 
        }
        
        /// -----------------------------------------------------------------------------
        ///  <summary>
        ///  Exposes access to the raw controls for this dialog
        ///  </summary>
        ///  <value>An interface that groups all of the dialog's control properties together</value>
        ///  <remarks></remarks>
        ///  <history>[Dialog Class Maker Tool] 4/11/2003 Created
        ///  </history>
        /// -----------------------------------------------------------------------------
        public virtual IMicrosoftOperationsManagerSetupLicenseAgreementDialogControls Controls
        {
            get
            {
                return this;
            }
        }
        
        /// -----------------------------------------------------------------------------
        ///  <summary>
        ///  Routine to set/get the text in control NameASTestOperationsLabOrganizationMSProductIDQVG72JKDK4FR3Q8JKXGCFDG7M
        ///  </summary>
        ///  <remarks></remarks>
        ///  <history>[Dialog Class Maker Tool] 4/11/2003 Created
        ///  </history>
        /// -----------------------------------------------------------------------------
        public virtual string NameASTestOperationsLabOrganizationMSProductIDQVG72JKDK4FR3Q8JKXGCFDG7MText
        {
            get
            {
                return Controls.NameASTestOperationsLabOrganizationMSProductIDQVG72JKDK4FR3Q8JKXGCFDG7MTextBox.Text;
            }
            set
            {
                Controls.NameASTestOperationsLabOrganizationMSProductIDQVG72JKDK4FR3Q8JKXGCFDG7MTextBox.Text = value;
            }
        }
        
        /// -----------------------------------------------------------------------------
        ///  <summary>
        ///  Exposes access to the NextButton control
        ///  </summary>
        ///  <value></value>
        ///  <remarks></remarks>
        ///  <history>[Dialog Class Maker Tool] 4/11/2003 - Created
        ///  </history>
        /// -----------------------------------------------------------------------------
        Button IMicrosoftOperationsManagerSetupLicenseAgreementDialogControls.NextButton
        {
            get
            {
                if ((m_CachedNextButton == null))
                {
                    m_CachedNextButton = new Button(this, ControlIDs.NextButton);
                }
                return m_CachedNextButton;
            }
        }
        
        /// -----------------------------------------------------------------------------
        ///  <summary>
        ///  Exposes access to the CancelButton control
        ///  </summary>
        ///  <value></value>
        ///  <remarks></remarks>
        ///  <history>[Dialog Class Maker Tool] 4/11/2003 - Created
        ///  </history>
        /// -----------------------------------------------------------------------------
        Button IMicrosoftOperationsManagerSetupLicenseAgreementDialogControls.CancelButton
        {
            get
            {
                if ((m_CachedCancelButton == null))
                {
                    m_CachedCancelButton = new Button(this, ControlIDs.CancelButton);
                }
                return m_CachedCancelButton;
            }
        }
        
        /// -----------------------------------------------------------------------------
        ///  <summary>
        ///  Exposes access to the NameASTestOperationsLabOrganizationMSProductIDQVG72JKDK4FR3Q8JKXGCFDG7MTextBox control
        ///  </summary>
        ///  <value></value>
        ///  <remarks></remarks>
        ///  <history>[Dialog Class Maker Tool] 4/11/2003 - Created
        ///  </history>
        /// -----------------------------------------------------------------------------
        TextBox IMicrosoftOperationsManagerSetupLicenseAgreementDialogControls.NameASTestOperationsLabOrganizationMSProductIDQVG72JKDK4FR3Q8JKXGCFDG7MTextBox
        {
            get
            {
                if ((m_CachedNameASTestOperationsLabOrganizationMSProductIDQVG72JKDK4FR3Q8JKXGCFDG7MTextBox == null))
                {
                    m_CachedNameASTestOperationsLabOrganizationMSProductIDQVG72JKDK4FR3Q8JKXGCFDG7MTextBox = new TextBox(this, ControlIDs.NameASTestOperationsLabOrganizationMSProductIDQVG72JKDK4FR3Q8JKXGCFDG7MTextBox);
                }
                return m_CachedNameASTestOperationsLabOrganizationMSProductIDQVG72JKDK4FR3Q8JKXGCFDG7MTextBox;
            }
        }
        
        /// -----------------------------------------------------------------------------
        ///  <summary>
        ///  Exposes access to the BackButton control
        ///  </summary>
        ///  <value></value>
        ///  <remarks></remarks>
        ///  <history>[Dialog Class Maker Tool] 4/11/2003 - Created
        ///  </history>
        /// -----------------------------------------------------------------------------
        Button IMicrosoftOperationsManagerSetupLicenseAgreementDialogControls.BackButton
        {
            get
            {
                if ((m_CachedBackButton == null))
                {
                    m_CachedBackButton = new Button(this, ControlIDs.BackButton);
                }
                return m_CachedBackButton;
            }
        }
        
        /// -----------------------------------------------------------------------------
        ///  <summary>
        ///  Exposes access to the PleasewritedownyourProductIDnumberIfyouneedtocallMicrosoftTechnicalSupportyouwillbeaskedforthisnumbeStaticControl control
        ///  </summary>
        ///  <value></value>
        ///  <remarks></remarks>
        ///  <history>[Dialog Class Maker Tool] 4/11/2003 - Created
        ///  </history>
        /// -----------------------------------------------------------------------------
        StaticControl IMicrosoftOperationsManagerSetupLicenseAgreementDialogControls.PleasewritedownyourProductIDnumberIfyouneedtocallMicrosoftTechnicalSupportyouwillbeaskedforthisnumbeStaticControl
        {
            get
            {
                if ((m_CachedPleasewritedownyourProductIDnumberIfyouneedtocallMicrosoftTechnicalSupportyouwillbeaskedforthisnumbeStaticControl == null))
                {
                    m_CachedPleasewritedownyourProductIDnumberIfyouneedtocallMicrosoftTechnicalSupportyouwillbeaskedforthisnumbeStaticControl = new StaticControl(this, ControlIDs.PleasewritedownyourProductIDnumberIfyouneedtocallMicrosoftTechnicalSupportyouwillbeaskedforthisnumbeStaticControl);
                }
                return m_CachedPleasewritedownyourProductIDnumberIfyouneedtocallMicrosoftTechnicalSupportyouwillbeaskedforthisnumbeStaticControl;
            }
        }
        
        /// -----------------------------------------------------------------------------
        ///  <summary>
        ///  Exposes access to the NameASTestOperationsLabOrganizationMSProductIDQVG72JKDK4FR3Q8JKXGCFDG7MStaticControl control
        ///  </summary>
        ///  <value></value>
        ///  <remarks></remarks>
        ///  <history>[Dialog Class Maker Tool] 4/11/2003 - Created
        ///  </history>
        /// -----------------------------------------------------------------------------
        StaticControl IMicrosoftOperationsManagerSetupLicenseAgreementDialogControls.NameASTestOperationsLabOrganizationMSProductIDQVG72JKDK4FR3Q8JKXGCFDG7MStaticControl
        {
            get
            {
                if ((m_CachedNameASTestOperationsLabOrganizationMSProductIDQVG72JKDK4FR3Q8JKXGCFDG7MStaticControl == null))
                {
                    m_CachedNameASTestOperationsLabOrganizationMSProductIDQVG72JKDK4FR3Q8JKXGCFDG7MStaticControl = new StaticControl(this, ControlIDs.NameASTestOperationsLabOrganizationMSProductIDQVG72JKDK4FR3Q8JKXGCFDG7MStaticControl);
                }
                return m_CachedNameASTestOperationsLabOrganizationMSProductIDQVG72JKDK4FR3Q8JKXGCFDG7MStaticControl;
            }
        }
        
        /// -----------------------------------------------------------------------------
        ///  <summary>
        ///  Exposes access to the IacceptthetermsinthelicenseagreementRadioButton control
        ///  </summary>
        ///  <value></value>
        ///  <remarks></remarks>
        ///  <history>[Dialog Class Maker Tool] 4/11/2003 - Created
        ///  </history>
        /// -----------------------------------------------------------------------------
        RadioButton IMicrosoftOperationsManagerSetupLicenseAgreementDialogControls.IacceptthetermsinthelicenseagreementRadioButton
        {
            get
            {
                if ((m_CachedIacceptthetermsinthelicenseagreementRadioButton == null))
                {
                    m_CachedIacceptthetermsinthelicenseagreementRadioButton = new RadioButton(this, ControlIDs.IacceptthetermsinthelicenseagreementRadioButton);
                }
                return m_CachedIacceptthetermsinthelicenseagreementRadioButton;
            }
        }
        
        /// -----------------------------------------------------------------------------
        ///  <summary>
        ///  Exposes access to the IdonotacceptthetermsinthelicenseagreementRadioButton control
        ///  </summary>
        ///  <value></value>
        ///  <remarks></remarks>
        ///  <history>[Dialog Class Maker Tool] 4/11/2003 - Created
        ///  </history>
        /// -----------------------------------------------------------------------------
        RadioButton IMicrosoftOperationsManagerSetupLicenseAgreementDialogControls.IdonotacceptthetermsinthelicenseagreementRadioButton
        {
            get
            {
                if ((m_CachedIdonotacceptthetermsinthelicenseagreementRadioButton == null))
                {
                    m_CachedIdonotacceptthetermsinthelicenseagreementRadioButton = new RadioButton(this, ControlIDs.IdonotacceptthetermsinthelicenseagreementRadioButton);
                }
                return m_CachedIdonotacceptthetermsinthelicenseagreementRadioButton;
            }
        }
        
        /// -----------------------------------------------------------------------------
        ///  <summary>
        ///  Exposes access to the MicrosoftOperationsManager2000LicenseandSupportInformationStaticControl control
        ///  </summary>
        ///  <value></value>
        ///  <remarks></remarks>
        ///  <history>[Dialog Class Maker Tool] 4/11/2003 - Created
        ///  </history>
        /// -----------------------------------------------------------------------------
        StaticControl IMicrosoftOperationsManagerSetupLicenseAgreementDialogControls.MicrosoftOperationsManager2000LicenseandSupportInformationStaticControl
        {
            get
            {
                if ((m_CachedMicrosoftOperationsManager2000LicenseandSupportInformationStaticControl == null))
                {
                    m_CachedMicrosoftOperationsManager2000LicenseandSupportInformationStaticControl = new StaticControl(this, ControlIDs.MicrosoftOperationsManager2000LicenseandSupportInformationStaticControl);
                }
                return m_CachedMicrosoftOperationsManager2000LicenseandSupportInformationStaticControl;
            }
        }
        
        /// -----------------------------------------------------------------------------
        ///  <summary>
        ///  This function will attempt to find a showing instance of the dialog.
        ///  </summary>
        ///  <returns>The dialog's hWnd</returns>
        ///  <remarks></remarks>)
        ///  <history>[Dialog Class Maker Tool] 4/11/2003 Created
        ///  </history>
        /// -----------------------------------------------------------------------------
        private static int Init(App app)
        {
            // First check if the dialog is already up.
            Window tempWindow = new Window(Strings.DialogTitle, "GLBSWizard", true, 0, app.Process.Id);
            if ((tempWindow != null))
            {
                return tempWindow.Extended.HWnd;
            }
            // Dialog not found.  Need to invoke the dialog.
            // TODO: Add code to bring up dthe dialog
            // 
            // TODO: Remove next line.  Your code should return the handle of the dialog.
            return 0;
        }
        
        /// -----------------------------------------------------------------------------
        ///  <summary>
        ///  Routine to click on button Next
        ///  </summary>
        ///  <remarks></remarks>
        ///  <history>[Dialog Class Maker Tool] 4/11/2003 Created
        ///  </history>
        /// -----------------------------------------------------------------------------
        public virtual void ClickNext()
        {
            Controls.NextButton.Click();
        }
        
        /// -----------------------------------------------------------------------------
        ///  <summary>
        ///  Routine to click on button Cancel
        ///  </summary>
        ///  <remarks></remarks>
        ///  <history>[Dialog Class Maker Tool] 4/11/2003 Created
        ///  </history>
        /// -----------------------------------------------------------------------------
        public virtual void ClickCancel()
        {
            Controls.CancelButton.Click();
        }
        
        /// -----------------------------------------------------------------------------
        ///  <summary>
        ///  Routine to click on button Back
        ///  </summary>
        ///  <remarks></remarks>
        ///  <history>[Dialog Class Maker Tool] 4/11/2003 Created
        ///  </history>
        /// -----------------------------------------------------------------------------
        public virtual void ClickBack()
        {
            Controls.BackButton.Click();
        }
        
        /// -----------------------------------------------------------------------------
        ///  <summary>
        ///  Routine to click on button Iacceptthetermsinthelicenseagreement
        ///  </summary>
        ///  <remarks></remarks>
        ///  <history>[Dialog Class Maker Tool] 4/11/2003 Created
        ///  </history>
        /// -----------------------------------------------------------------------------
        public virtual void ClickIacceptthetermsinthelicenseagreement()
        {
            Controls.IacceptthetermsinthelicenseagreementRadioButton.Click();
        }
        
        /// -----------------------------------------------------------------------------
        ///  <summary>
        ///  Routine to click on button Idonotacceptthetermsinthelicenseagreement
        ///  </summary>
        ///  <remarks></remarks>
        ///  <history>[Dialog Class Maker Tool] 4/11/2003 Created
        ///  </history>
        /// -----------------------------------------------------------------------------
        public virtual void ClickIdonotacceptthetermsinthelicenseagreement()
        {
            Controls.IdonotacceptthetermsinthelicenseagreementRadioButton.Click();
        }
        
        public class Strings
        {
            public const string DialogTitle = "Microsoft Operations Manager Setup - License Agreement";
            public const string Next = "&Next >";
            public const string Cancel = "Cancel";
            public const string Back = "< &Back";
            public const string PleasewritedownyourProductIDnumberIfyouneedtocallMicrosoftTechnicalSupportyouwillbeaskedforthisnumbe = "Please write down your Product ID number. If you need to call Microsoft Technical" +
" Support, you will be asked for this number.";
            public const string NameASTestOperationsLabOrganizationMSProductIDQVG72JKDK4FR3Q8JKXGCFDG7M = "Name:             AS Test Operations Lab\r\nOrganization:  MS\r\nProduct ID:     QVG7" +
"2-JKDK4-FR3Q8-JKXGC-FDG7M";
            public const string Iacceptthetermsinthelicenseagreement = "I &accept the terms in the license agreement";
            public const string Idonotacceptthetermsinthelicenseagreement = "I &do not accept the terms in the license agreement";
            public const string MicrosoftOperationsManager2000LicenseandSupportInformation = "Microsoft Operations Manager 2000 License and Support Information.";
        }
        
        public class ControlIDs
        {
            public const int NextButton = 3;
            public const int CancelButton = 4;
            public const int NameASTestOperationsLabOrganizationMSProductIDQVG72JKDK4FR3Q8JKXGCFDG7MTextBox = 6;
            public const int BackButton = 7;
            public const int PleasewritedownyourProductIDnumberIfyouneedtocallMicrosoftTechnicalSupportyouwillbeaskedforthisnumbeStaticControl = 8;
            public const int NameASTestOperationsLabOrganizationMSProductIDQVG72JKDK4FR3Q8JKXGCFDG7MStaticControl = 9;
            public const int IacceptthetermsinthelicenseagreementRadioButton = 10;
            public const int IdonotacceptthetermsinthelicenseagreementRadioButton = 11;
            public const int MicrosoftOperationsManager2000LicenseandSupportInformationStaticControl = 12;
        }
    }
}
